/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
import { McpServer } from '@modelcontextprotocol/sdk/server/mcp'
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio'
import { listPetsHandler, listPetsQueryParams, createPetsHandler, createPetsMutationRequest, showPetByIdHandler, showPetByIdPathParams } from './showPetById'

export const server = new McpServer({
  name: 'Swagger Petstore',
  version: '3.0.0',
})

server.tool('listPets', '', { params: listPetsQueryParams }, async ({ params }) => {
  return listPetsHandler({ params })
})

server.tool('createPets', '', { data: createPetsMutationRequest }, async ({ data }) => {
  return createPetsHandler({ data })
})

server.tool('showPetById', '', { petId: showPetByIdPathParams.shape['petId'], testId: showPetByIdPathParams.shape['testId'] }, async ({ petId, testId }) => {
  return showPetByIdHandler({ petId, testId })
})

async function startServer() {
  try {
    const transport = new StdioServerTransport()
    await server.connect(transport)
    console.log('Server started and listening on stdio')
  } catch (error) {
    console.error('Failed to start server:', error)
    process.exit(1)
  }
}

startServer()
